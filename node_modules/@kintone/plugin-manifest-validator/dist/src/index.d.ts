import type { ErrorObject } from "ajv";
type ValidateResult = {
    valid: boolean | PromiseLike<any>;
    errors: null | ErrorObject[];
};
type ValidatorResult = boolean | {
    valid: true;
} | {
    valid: false;
    message?: string;
};
type Options = {
    relativePath?: (filePath: string) => boolean;
    maxFileSize?: (maxBytes: number, filePath: string) => ValidatorResult;
    fileExists?: (filePath: string) => ValidatorResult;
};
/**
 * @param {Object} json
 * @param {Object=} options
 * @return {{valid: boolean, errors: Array<!Object>}} errors is null if valid
 */
declare const _default: (json: Record<string, any>, options?: Options) => ValidateResult;
export default _default;
