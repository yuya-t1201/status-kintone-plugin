import { LitElement } from "lit";
/**
 * This type is only used in base components
 */
type CustomEventDetail = {
    error?: string;
    oldValue?: string;
    value?: string;
};
export declare abstract class KucBase extends LitElement {
    createRenderRoot(): this;
    throwErrorAfterUpdateComplete(message: string): Promise<void>;
}
/**
 * Common function to dispatch custom event.
 * This is used in all components.
 * @param el        Event target, the type is HTMLElement
 * @param eventName Event name, the type is string
 * @param detail    The detail property of event, the type declaration means any object
 */
export declare const dispatchCustomEvent: (el: HTMLElement, eventName: string, detail?: {
    [p: string]: any;
} | undefined) => boolean;
export declare const createStyleOnHeader: (styleText: string) => void;
export { CustomEventDetail };
export declare const generateGUID: () => string;
